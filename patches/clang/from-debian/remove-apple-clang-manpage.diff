Index: llvm-toolchain-snapshot_16~++20220920091612+a7d2409bac7f/clang/docs/CommandGuide/clang.rst
===================================================================
--- llvm-toolchain-snapshot_16~++20220920091612+a7d2409bac7f.orig/clang/docs/CommandGuide/clang.rst
+++ llvm-toolchain-snapshot_16~++20220920091612+a7d2409bac7f/clang/docs/CommandGuide/clang.rst
@@ -345,24 +345,10 @@ Clang fully supports cross compilation a
 Depending on how your version of Clang is configured, it may have support for a
 number of cross compilers, or may only support a native target.
 
-.. option:: -arch <architecture>
-
-  Specify the architecture to build for (Mac OS X specific).
-
 .. option:: -target <architecture>
 
   Specify the architecture to build for (all platforms).
 
-.. option:: -mmacosx-version-min=<version>
-
-  When building for macOS, specify the minimum version supported by your
-  application.
-
-.. option:: -miphoneos-version-min
-
-  When building for iPhone OS, specify the minimum version supported by your
-  application.
-
 .. option:: --print-supported-cpus
 
   Print out a list of supported processors for the given target (specified
@@ -681,11 +667,6 @@ ENVIRONMENT
   These environment variables specify additional paths, as for :envvar:`CPATH`, which are
   only used when processing the appropriate language.
 
-.. envvar:: MACOSX_DEPLOYMENT_TARGET
-
-  If :option:`-mmacosx-version-min` is unspecified, the default deployment
-  target is read from this environment variable. This option only affects
-  Darwin targets.
 
 BUGS
 ----
